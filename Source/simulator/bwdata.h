#pragma once
#include <set>
#include <map>
#include <array>
using namespace std;
namespace BWSim {
typedef struct{
    int id;
    char name[50];
    set<int> abilities;
    int acceleration;
    int airWeapon;
    int armor;
    int armorUpgrade;
    int buildScore;
    set<int> buildsWhat;
    int buildTime;
    bool canAttack;
    bool canBuildAddon;
    bool canMove;
    bool canProduce;
    int cloakingTech;
    int destroyScore;
    int dimensionDown;
    int dimensionLeft;
    int dimensionRight;
    int dimensionUp;
    int gasPrice;
    int getRace;
    int groundWeapon;
    int haltDistance;
    bool hasPermanentCloak;
    int height;
    bool isAddon;
    bool isBeacon;
    bool isBuilding;
    bool isBurrowable;
    bool isCloakable;
    bool isCritter;
    bool isDetector;
    bool isFlagBeacon;
    bool isFlyer;
    bool isFlyingBuilding;
    bool isHero;
    bool isInvincible;
    bool isMechanical;
    bool isMineralField;
    bool isNeutral;
    bool isOrganic;
    bool isPowerup;
    bool isRefinery;
    bool isResourceContainer;
    bool isResourceDepot;
    bool isRobotic;
    bool isSpecialBuilding;
    bool isSpell;
    bool isSpellcaster;
    bool isTwoUnitsInOneEgg;
    bool isWorker;
    int maxAirHits;
    int maxEnergy;
    int maxGroundHits;
    int maxHitPoints;
    int maxShields;
    int mineralPrice;
    bool producesCreep;
    bool producesLarva;
    bool regeneratesHP;
    int requiredTech;
    set<int> requiredUnits;
    bool requiresCreep;
    bool requiresPsi;
    set<int> researchesWhat;
    int seekRange;
    int sightRange;
    int size;
    int spaceProvided;
    int spaceRequired;
    int supplyProvided;
    int supplyRequired;
    int tileHeight;
    int tileWidth;
    double topSpeed;
    int turnRadius;
    set<int> upgrades;
    set<int> upgradesWhat;
    int whatBuilds;
    int whatBuildsNeed;
    int width;
} UnitType;
extern const UnitType Unit_Terran_Marine;
extern const UnitType Unit_Terran_Ghost;
extern const UnitType Unit_Terran_Vulture;
extern const UnitType Unit_Terran_Goliath;
extern const UnitType Unit_Terran_Goliath_Turret;
extern const UnitType Unit_Terran_Siege_Tank_Tank_Mode;
extern const UnitType Unit_Terran_Siege_Tank_Tank_Mode_Turret;
extern const UnitType Unit_Terran_SCV;
extern const UnitType Unit_Terran_Wraith;
extern const UnitType Unit_Terran_Science_Vessel;
extern const UnitType Unit_Hero_Gui_Montag;
extern const UnitType Unit_Terran_Dropship;
extern const UnitType Unit_Terran_Battlecruiser;
extern const UnitType Unit_Terran_Vulture_Spider_Mine;
extern const UnitType Unit_Terran_Nuclear_Missile;
extern const UnitType Unit_Terran_Civilian;
extern const UnitType Unit_Hero_Sarah_Kerrigan;
extern const UnitType Unit_Hero_Alan_Schezar;
extern const UnitType Unit_Hero_Alan_Schezar_Turret;
extern const UnitType Unit_Hero_Jim_Raynor_Vulture;
extern const UnitType Unit_Hero_Jim_Raynor_Marine;
extern const UnitType Unit_Hero_Tom_Kazansky;
extern const UnitType Unit_Hero_Magellan;
extern const UnitType Unit_Hero_Edmund_Duke_Tank_Mode;
extern const UnitType Unit_Hero_Edmund_Duke_Tank_Mode_Turret;
extern const UnitType Unit_Hero_Edmund_Duke_Siege_Mode;
extern const UnitType Unit_Hero_Edmund_Duke_Siege_Mode_Turret;
extern const UnitType Unit_Hero_Arcturus_Mengsk;
extern const UnitType Unit_Hero_Hyperion;
extern const UnitType Unit_Hero_Norad_II;
extern const UnitType Unit_Terran_Siege_Tank_Siege_Mode;
extern const UnitType Unit_Terran_Siege_Tank_Siege_Mode_Turret;
extern const UnitType Unit_Terran_Firebat;
extern const UnitType Unit_Spell_Scanner_Sweep;
extern const UnitType Unit_Terran_Medic;
extern const UnitType Unit_Zerg_Larva;
extern const UnitType Unit_Zerg_Egg;
extern const UnitType Unit_Zerg_Zergling;
extern const UnitType Unit_Zerg_Hydralisk;
extern const UnitType Unit_Zerg_Ultralisk;
extern const UnitType Unit_Zerg_Broodling;
extern const UnitType Unit_Zerg_Drone;
extern const UnitType Unit_Zerg_Overlord;
extern const UnitType Unit_Zerg_Mutalisk;
extern const UnitType Unit_Zerg_Guardian;
extern const UnitType Unit_Zerg_Queen;
extern const UnitType Unit_Zerg_Defiler;
extern const UnitType Unit_Zerg_Scourge;
extern const UnitType Unit_Hero_Torrasque;
extern const UnitType Unit_Hero_Matriarch;
extern const UnitType Unit_Zerg_Infested_Terran;
extern const UnitType Unit_Hero_Infested_Kerrigan;
extern const UnitType Unit_Hero_Unclean_One;
extern const UnitType Unit_Hero_Hunter_Killer;
extern const UnitType Unit_Hero_Devouring_One;
extern const UnitType Unit_Hero_Kukulza_Mutalisk;
extern const UnitType Unit_Hero_Kukulza_Guardian;
extern const UnitType Unit_Hero_Yggdrasill;
extern const UnitType Unit_Terran_Valkyrie;
extern const UnitType Unit_Zerg_Cocoon;
extern const UnitType Unit_Protoss_Corsair;
extern const UnitType Unit_Protoss_Dark_Templar;
extern const UnitType Unit_Zerg_Devourer;
extern const UnitType Unit_Protoss_Dark_Archon;
extern const UnitType Unit_Protoss_Probe;
extern const UnitType Unit_Protoss_Zealot;
extern const UnitType Unit_Protoss_Dragoon;
extern const UnitType Unit_Protoss_High_Templar;
extern const UnitType Unit_Protoss_Archon;
extern const UnitType Unit_Protoss_Shuttle;
extern const UnitType Unit_Protoss_Scout;
extern const UnitType Unit_Protoss_Arbiter;
extern const UnitType Unit_Protoss_Carrier;
extern const UnitType Unit_Protoss_Interceptor;
extern const UnitType Unit_Hero_Dark_Templar;
extern const UnitType Unit_Hero_Zeratul;
extern const UnitType Unit_Hero_Tassadar_Zeratul_Archon;
extern const UnitType Unit_Hero_Fenix_Zealot;
extern const UnitType Unit_Hero_Fenix_Dragoon;
extern const UnitType Unit_Hero_Tassadar;
extern const UnitType Unit_Hero_Mojo;
extern const UnitType Unit_Hero_Warbringer;
extern const UnitType Unit_Hero_Gantrithor;
extern const UnitType Unit_Protoss_Reaver;
extern const UnitType Unit_Protoss_Observer;
extern const UnitType Unit_Protoss_Scarab;
extern const UnitType Unit_Hero_Danimoth;
extern const UnitType Unit_Hero_Aldaris;
extern const UnitType Unit_Hero_Artanis;
extern const UnitType Unit_Critter_Rhynadon;
extern const UnitType Unit_Critter_Bengalaas;
extern const UnitType Unit_Special_Cargo_Ship;
extern const UnitType Unit_Special_Mercenary_Gunship;
extern const UnitType Unit_Critter_Scantid;
extern const UnitType Unit_Critter_Kakaru;
extern const UnitType Unit_Critter_Ragnasaur;
extern const UnitType Unit_Critter_Ursadon;
extern const UnitType Unit_Zerg_Lurker_Egg;
extern const UnitType Unit_Hero_Raszagal;
extern const UnitType Unit_Hero_Samir_Duran;
extern const UnitType Unit_Hero_Alexei_Stukov;
extern const UnitType Unit_Special_Map_Revealer;
extern const UnitType Unit_Hero_Gerard_DuGalle;
extern const UnitType Unit_Zerg_Lurker;
extern const UnitType Unit_Hero_Infested_Duran;
extern const UnitType Unit_Spell_Disruption_Web;
extern const UnitType Unit_Terran_Command_Center;
extern const UnitType Unit_Terran_Comsat_Station;
extern const UnitType Unit_Terran_Nuclear_Silo;
extern const UnitType Unit_Terran_Supply_Depot;
extern const UnitType Unit_Terran_Refinery;
extern const UnitType Unit_Terran_Barracks;
extern const UnitType Unit_Terran_Academy;
extern const UnitType Unit_Terran_Factory;
extern const UnitType Unit_Terran_Starport;
extern const UnitType Unit_Terran_Control_Tower;
extern const UnitType Unit_Terran_Science_Facility;
extern const UnitType Unit_Terran_Covert_Ops;
extern const UnitType Unit_Terran_Physics_Lab;
extern const UnitType Unit_Unused_Terran1;
extern const UnitType Unit_Terran_Machine_Shop;
extern const UnitType Unit_Unused_Terran2;
extern const UnitType Unit_Terran_Engineering_Bay;
extern const UnitType Unit_Terran_Armory;
extern const UnitType Unit_Terran_Missile_Turret;
extern const UnitType Unit_Terran_Bunker;
extern const UnitType Unit_Special_Crashed_Norad_II;
extern const UnitType Unit_Special_Ion_Cannon;
extern const UnitType Unit_Powerup_Uraj_Crystal;
extern const UnitType Unit_Powerup_Khalis_Crystal;
extern const UnitType Unit_Zerg_Infested_Command_Center;
extern const UnitType Unit_Zerg_Hatchery;
extern const UnitType Unit_Zerg_Lair;
extern const UnitType Unit_Zerg_Hive;
extern const UnitType Unit_Zerg_Nydus_Canal;
extern const UnitType Unit_Zerg_Hydralisk_Den;
extern const UnitType Unit_Zerg_Defiler_Mound;
extern const UnitType Unit_Zerg_Greater_Spire;
extern const UnitType Unit_Zerg_Queens_Nest;
extern const UnitType Unit_Zerg_Evolution_Chamber;
extern const UnitType Unit_Zerg_Ultralisk_Cavern;
extern const UnitType Unit_Zerg_Spire;
extern const UnitType Unit_Zerg_Spawning_Pool;
extern const UnitType Unit_Zerg_Creep_Colony;
extern const UnitType Unit_Zerg_Spore_Colony;
extern const UnitType Unit_Unused_Zerg1;
extern const UnitType Unit_Zerg_Sunken_Colony;
extern const UnitType Unit_Special_Overmind_With_Shell;
extern const UnitType Unit_Special_Overmind;
extern const UnitType Unit_Zerg_Extractor;
extern const UnitType Unit_Special_Mature_Chrysalis;
extern const UnitType Unit_Special_Cerebrate;
extern const UnitType Unit_Special_Cerebrate_Daggoth;
extern const UnitType Unit_Unused_Zerg2;
extern const UnitType Unit_Protoss_Nexus;
extern const UnitType Unit_Protoss_Robotics_Facility;
extern const UnitType Unit_Protoss_Pylon;
extern const UnitType Unit_Protoss_Assimilator;
extern const UnitType Unit_Unused_Protoss1;
extern const UnitType Unit_Protoss_Observatory;
extern const UnitType Unit_Protoss_Gateway;
extern const UnitType Unit_Unused_Protoss2;
extern const UnitType Unit_Protoss_Photon_Cannon;
extern const UnitType Unit_Protoss_Citadel_of_Adun;
extern const UnitType Unit_Protoss_Cybernetics_Core;
extern const UnitType Unit_Protoss_Templar_Archives;
extern const UnitType Unit_Protoss_Forge;
extern const UnitType Unit_Protoss_Stargate;
extern const UnitType Unit_Special_Stasis_Cell_Prison;
extern const UnitType Unit_Protoss_Fleet_Beacon;
extern const UnitType Unit_Protoss_Arbiter_Tribunal;
extern const UnitType Unit_Protoss_Robotics_Support_Bay;
extern const UnitType Unit_Protoss_Shield_Battery;
extern const UnitType Unit_Special_Khaydarin_Crystal_Form;
extern const UnitType Unit_Special_Protoss_Temple;
extern const UnitType Unit_Special_XelNaga_Temple;
extern const UnitType Unit_Resource_Mineral_Field;
extern const UnitType Unit_Resource_Mineral_Field_Type_2;
extern const UnitType Unit_Resource_Mineral_Field_Type_3;
extern const UnitType Unit_Unused_Cave;
extern const UnitType Unit_Unused_Cave_In;
extern const UnitType Unit_Unused_Cantina;
extern const UnitType Unit_Unused_Mining_Platform;
extern const UnitType Unit_Unused_Independant_Command_Center;
extern const UnitType Unit_Special_Independant_Starport;
extern const UnitType Unit_Unused_Independant_Jump_Gate;
extern const UnitType Unit_Unused_Ruins;
extern const UnitType Unit_Unused_Khaydarin_Crystal_Formation;
extern const UnitType Unit_Resource_Vespene_Geyser;
extern const UnitType Unit_Special_Warp_Gate;
extern const UnitType Unit_Special_Psi_Disrupter;
extern const UnitType Unit_Unused_Zerg_Marker;
extern const UnitType Unit_Unused_Terran_Marker;
extern const UnitType Unit_Unused_Protoss_Marker;
extern const UnitType Unit_Special_Zerg_Beacon;
extern const UnitType Unit_Special_Terran_Beacon;
extern const UnitType Unit_Special_Protoss_Beacon;
extern const UnitType Unit_Special_Zerg_Flag_Beacon;
extern const UnitType Unit_Special_Terran_Flag_Beacon;
extern const UnitType Unit_Special_Protoss_Flag_Beacon;
extern const UnitType Unit_Special_Power_Generator;
extern const UnitType Unit_Special_Overmind_Cocoon;
extern const UnitType Unit_Spell_Dark_Swarm;
extern const UnitType Unit_Special_Floor_Missile_Trap;
extern const UnitType Unit_Special_Floor_Hatch;
extern const UnitType Unit_Special_Upper_Level_Door;
extern const UnitType Unit_Special_Right_Upper_Level_Door;
extern const UnitType Unit_Special_Pit_Door;
extern const UnitType Unit_Special_Right_Pit_Door;
extern const UnitType Unit_Special_Floor_Gun_Trap;
extern const UnitType Unit_Special_Wall_Missile_Trap;
extern const UnitType Unit_Special_Wall_Flame_Trap;
extern const UnitType Unit_Special_Right_Wall_Missile_Trap;
extern const UnitType Unit_Special_Right_Wall_Flame_Trap;
extern const UnitType Unit_Special_Start_Location;
extern const UnitType Unit_Powerup_Flag;
extern const UnitType Unit_Powerup_Young_Chrysalis;
extern const UnitType Unit_Powerup_Psi_Emitter;
extern const UnitType Unit_Powerup_Data_Disk;
extern const UnitType Unit_Powerup_Khaydarin_Crystal;
extern const UnitType Unit_Powerup_Mineral_Cluster_Type_1;
extern const UnitType Unit_Powerup_Mineral_Cluster_Type_2;
extern const UnitType Unit_Powerup_Protoss_Gas_Orb_Type_1;
extern const UnitType Unit_Powerup_Protoss_Gas_Orb_Type_2;
extern const UnitType Unit_Powerup_Zerg_Gas_Sac_Type_1;
extern const UnitType Unit_Powerup_Zerg_Gas_Sac_Type_2;
extern const UnitType Unit_Powerup_Terran_Gas_Tank_Type_1;
extern const UnitType Unit_Powerup_Terran_Gas_Tank_Type_2;
extern const UnitType Unit_None;
extern const UnitType Unit_AllUnits;
extern const UnitType Unit_Men;
extern const UnitType Unit_Buildings;
extern const UnitType Unit_Factories;
extern const UnitType Unit_Unknown;
#define UnitTypeMax 234
extern const UnitType AllUnitTypes[234];
typedef struct {
  int id;
  char name[50];
  int energyCost;
  int gasPrice;
  int getOrder;
  int getRace;
  int getWeapon;
  int mineralPrice;
  int requiredUnit;
  int researchTime;
  bool targetsPosition;
  bool targetsUnit;
  int whatResearches;
  set<int> whatUses;
} TechType;
extern const TechType& Tech_Stim_Packs;
extern const TechType& Tech_Lockdown;
extern const TechType& Tech_EMP_Shockwave;
extern const TechType& Tech_Spider_Mines;
extern const TechType& Tech_Scanner_Sweep;
extern const TechType& Tech_Tank_Siege_Mode;
extern const TechType& Tech_Defensive_Matrix;
extern const TechType& Tech_Irradiate;
extern const TechType& Tech_Yamato_Gun;
extern const TechType& Tech_Cloaking_Field;
extern const TechType& Tech_Personnel_Cloaking;
extern const TechType& Tech_Burrowing;
extern const TechType& Tech_Infestation;
extern const TechType& Tech_Spawn_Broodlings;
extern const TechType& Tech_Dark_Swarm;
extern const TechType& Tech_Plague;
extern const TechType& Tech_Consume;
extern const TechType& Tech_Ensnare;
extern const TechType& Tech_Parasite;
extern const TechType& Tech_Psionic_Storm;
extern const TechType& Tech_Hallucination;
extern const TechType& Tech_Recall;
extern const TechType& Tech_Stasis_Field;
extern const TechType& Tech_Archon_Warp;
extern const TechType& Tech_Restoration;
extern const TechType& Tech_Disruption_Web;
extern const TechType& Tech_Mind_Control;
extern const TechType& Tech_Dark_Archon_Meld;
extern const TechType& Tech_Feedback;
extern const TechType& Tech_Optical_Flare;
extern const TechType& Tech_Maelstrom;
extern const TechType& Tech_Lurker_Aspect;
extern const TechType& Tech_Healing;
extern const TechType& Tech_None;
extern const TechType& Tech_Nuclear_Strike;
extern const TechType& Tech_Unknown;
#define TechTypeMax 47
extern const TechType AllTechTypes[47];
typedef struct {
  int id;
  char name[50];
  int gasPrice[10];
  int gasPriceFactor;
  int getRace;
  int maxRepeats;
  int mineralPrice[10];
  int mineralPriceFactor;
  int upgradeTime[10];
  int upgradeTimeFactor;
  int whatsRequired[10];
  int whatUpgrades;
  set<int> whatUses;
  } UpgradeType;
extern const UpgradeType& Upgrade_Terran_Infantry_Armor;
extern const UpgradeType& Upgrade_Terran_Vehicle_Plating;
extern const UpgradeType& Upgrade_Terran_Ship_Plating;
extern const UpgradeType& Upgrade_Zerg_Carapace;
extern const UpgradeType& Upgrade_Zerg_Flyer_Carapace;
extern const UpgradeType& Upgrade_Protoss_Ground_Armor;
extern const UpgradeType& Upgrade_Protoss_Air_Armor;
extern const UpgradeType& Upgrade_Terran_Infantry_Weapons;
extern const UpgradeType& Upgrade_Terran_Vehicle_Weapons;
extern const UpgradeType& Upgrade_Terran_Ship_Weapons;
extern const UpgradeType& Upgrade_Zerg_Melee_Attacks;
extern const UpgradeType& Upgrade_Zerg_Missile_Attacks;
extern const UpgradeType& Upgrade_Zerg_Flyer_Attacks;
extern const UpgradeType& Upgrade_Protoss_Ground_Weapons;
extern const UpgradeType& Upgrade_Protoss_Air_Weapons;
extern const UpgradeType& Upgrade_Protoss_Plasma_Shields;
extern const UpgradeType& Upgrade_U_238_Shells;
extern const UpgradeType& Upgrade_Ion_Thrusters;
extern const UpgradeType& Upgrade_Titan_Reactor;
extern const UpgradeType& Upgrade_Ocular_Implants;
extern const UpgradeType& Upgrade_Moebius_Reactor;
extern const UpgradeType& Upgrade_Apollo_Reactor;
extern const UpgradeType& Upgrade_Colossus_Reactor;
extern const UpgradeType& Upgrade_Ventral_Sacs;
extern const UpgradeType& Upgrade_Antennae;
extern const UpgradeType& Upgrade_Pneumatized_Carapace;
extern const UpgradeType& Upgrade_Metabolic_Boost;
extern const UpgradeType& Upgrade_Adrenal_Glands;
extern const UpgradeType& Upgrade_Muscular_Augments;
extern const UpgradeType& Upgrade_Grooved_Spines;
extern const UpgradeType& Upgrade_Gamete_Meiosis;
extern const UpgradeType& Upgrade_Metasynaptic_Node;
extern const UpgradeType& Upgrade_Singularity_Charge;
extern const UpgradeType& Upgrade_Leg_Enhancements;
extern const UpgradeType& Upgrade_Scarab_Damage;
extern const UpgradeType& Upgrade_Reaver_Capacity;
extern const UpgradeType& Upgrade_Gravitic_Drive;
extern const UpgradeType& Upgrade_Sensor_Array;
extern const UpgradeType& Upgrade_Gravitic_Boosters;
extern const UpgradeType& Upgrade_Khaydarin_Amulet;
extern const UpgradeType& Upgrade_Apial_Sensors;
extern const UpgradeType& Upgrade_Gravitic_Thrusters;
extern const UpgradeType& Upgrade_Carrier_Capacity;
extern const UpgradeType& Upgrade_Khaydarin_Core;
extern const UpgradeType& Upgrade_Argus_Jewel;
extern const UpgradeType& Upgrade_Argus_Talisman;
extern const UpgradeType& Upgrade_Caduceus_Reactor;
extern const UpgradeType& Upgrade_Chitinous_Plating;
extern const UpgradeType& Upgrade_Anabolic_Synthesis;
extern const UpgradeType& Upgrade_Charon_Boosters;
extern const UpgradeType& Upgrade_Upgrade_60;
extern const UpgradeType& Upgrade_None;
extern const UpgradeType& Upgrade_Unknown;
#define UpgradeTypeMax 63
extern const UpgradeType AllUpgradeTypes[63];
typedef struct {
  int id;
  char name[50];
  int damageAmount;
  int damageBonus;
  int damageCooldown;
  int damageFactor;
  int damageType;
  int explosionType;
  int getTech;
  int innerSplashRadius;
  int maxRange;
  int medianSplashRadius;
  int minRange;
  int outerSplashRadius;
  bool targetsAir;
  bool targetsGround;
  bool targetsMechanical;
  bool targetsNonBuilding;
  bool targetsNonRobotic;
  bool targetsOrganic;
  bool targetsOrgOrMech;
  bool targetsOwn;
  bool targetsTerrain;
  int upgradeType;
  int whatUses;
} WeaponType;
extern const WeaponType& Weapon_Gauss_Rifle;
extern const WeaponType& Weapon_Gauss_Rifle_Jim_Raynor;
extern const WeaponType& Weapon_C_10_Canister_Rifle;
extern const WeaponType& Weapon_C_10_Canister_Rifle_Sarah_Kerrigan;
extern const WeaponType& Weapon_Fragmentation_Grenade;
extern const WeaponType& Weapon_Fragmentation_Grenade_Jim_Raynor;
extern const WeaponType& Weapon_Spider_Mines;
extern const WeaponType& Weapon_Twin_Autocannons;
extern const WeaponType& Weapon_Hellfire_Missile_Pack;
extern const WeaponType& Weapon_Twin_Autocannons_Alan_Schezar;
extern const WeaponType& Weapon_Hellfire_Missile_Pack_Alan_Schezar;
extern const WeaponType& Weapon_Arclite_Cannon;
extern const WeaponType& Weapon_Arclite_Cannon_Edmund_Duke;
extern const WeaponType& Weapon_Fusion_Cutter;
extern const WeaponType& Weapon_Gemini_Missiles;
extern const WeaponType& Weapon_Burst_Lasers;
extern const WeaponType& Weapon_Gemini_Missiles_Tom_Kazansky;
extern const WeaponType& Weapon_Burst_Lasers_Tom_Kazansky;
extern const WeaponType& Weapon_ATS_Laser_Battery;
extern const WeaponType& Weapon_ATA_Laser_Battery;
extern const WeaponType& Weapon_ATS_Laser_Battery_Hero;
extern const WeaponType& Weapon_ATA_Laser_Battery_Hero;
extern const WeaponType& Weapon_ATS_Laser_Battery_Hyperion;
extern const WeaponType& Weapon_ATA_Laser_Battery_Hyperion;
extern const WeaponType& Weapon_Flame_Thrower;
extern const WeaponType& Weapon_Flame_Thrower_Gui_Montag;
extern const WeaponType& Weapon_Arclite_Shock_Cannon;
extern const WeaponType& Weapon_Arclite_Shock_Cannon_Edmund_Duke;
extern const WeaponType& Weapon_Longbolt_Missile;
extern const WeaponType& Weapon_Yamato_Gun;
extern const WeaponType& Weapon_Nuclear_Strike;
extern const WeaponType& Weapon_Lockdown;
extern const WeaponType& Weapon_EMP_Shockwave;
extern const WeaponType& Weapon_Irradiate;
extern const WeaponType& Weapon_Claws;
extern const WeaponType& Weapon_Claws_Devouring_One;
extern const WeaponType& Weapon_Claws_Infested_Kerrigan;
extern const WeaponType& Weapon_Needle_Spines;
extern const WeaponType& Weapon_Needle_Spines_Hunter_Killer;
extern const WeaponType& Weapon_Kaiser_Blades;
extern const WeaponType& Weapon_Kaiser_Blades_Torrasque;
extern const WeaponType& Weapon_Toxic_Spores;
extern const WeaponType& Weapon_Spines;
extern const WeaponType& Weapon_Acid_Spore;
extern const WeaponType& Weapon_Acid_Spore_Kukulza;
extern const WeaponType& Weapon_Glave_Wurm;
extern const WeaponType& Weapon_Glave_Wurm_Kukulza;
extern const WeaponType& Weapon_Seeker_Spores;
extern const WeaponType& Weapon_Subterranean_Tentacle;
extern const WeaponType& Weapon_Suicide_Infested_Terran;
extern const WeaponType& Weapon_Suicide_Scourge;
extern const WeaponType& Weapon_Parasite;
extern const WeaponType& Weapon_Spawn_Broodlings;
extern const WeaponType& Weapon_Ensnare;
extern const WeaponType& Weapon_Dark_Swarm;
extern const WeaponType& Weapon_Plague;
extern const WeaponType& Weapon_Consume;
extern const WeaponType& Weapon_Particle_Beam;
extern const WeaponType& Weapon_Psi_Blades;
extern const WeaponType& Weapon_Psi_Blades_Fenix;
extern const WeaponType& Weapon_Phase_Disruptor;
extern const WeaponType& Weapon_Phase_Disruptor_Fenix;
extern const WeaponType& Weapon_Psi_Assault;
extern const WeaponType& Weapon_Psionic_Shockwave;
extern const WeaponType& Weapon_Psionic_Shockwave_TZ_Archon;
extern const WeaponType& Weapon_Dual_Photon_Blasters;
extern const WeaponType& Weapon_Anti_Matter_Missiles;
extern const WeaponType& Weapon_Dual_Photon_Blasters_Mojo;
extern const WeaponType& Weapon_Anti_Matter_Missiles_Mojo;
extern const WeaponType& Weapon_Phase_Disruptor_Cannon;
extern const WeaponType& Weapon_Phase_Disruptor_Cannon_Danimoth;
extern const WeaponType& Weapon_Pulse_Cannon;
extern const WeaponType& Weapon_STS_Photon_Cannon;
extern const WeaponType& Weapon_STA_Photon_Cannon;
extern const WeaponType& Weapon_Scarab;
extern const WeaponType& Weapon_Stasis_Field;
extern const WeaponType& Weapon_Psionic_Storm;
extern const WeaponType& Weapon_Warp_Blades_Zeratul;
extern const WeaponType& Weapon_Warp_Blades_Hero;
extern const WeaponType& Weapon_Platform_Laser_Battery;
extern const WeaponType& Weapon_Independant_Laser_Battery;
extern const WeaponType& Weapon_Twin_Autocannons_Floor_Trap;
extern const WeaponType& Weapon_Hellfire_Missile_Pack_Wall_Trap;
extern const WeaponType& Weapon_Flame_Thrower_Wall_Trap;
extern const WeaponType& Weapon_Hellfire_Missile_Pack_Floor_Trap;
extern const WeaponType& Weapon_Neutron_Flare;
extern const WeaponType& Weapon_Disruption_Web;
extern const WeaponType& Weapon_Restoration;
extern const WeaponType& Weapon_Halo_Rockets;
extern const WeaponType& Weapon_Corrosive_Acid;
extern const WeaponType& Weapon_Mind_Control;
extern const WeaponType& Weapon_Feedback;
extern const WeaponType& Weapon_Optical_Flare;
extern const WeaponType& Weapon_Maelstrom;
extern const WeaponType& Weapon_Subterranean_Spines;
extern const WeaponType& Weapon_Warp_Blades;
extern const WeaponType& Weapon_C_10_Canister_Rifle_Samir_Duran;
extern const WeaponType& Weapon_C_10_Canister_Rifle_Infested_Duran;
extern const WeaponType& Weapon_Dual_Photon_Blasters_Artanis;
extern const WeaponType& Weapon_Anti_Matter_Missiles_Artanis;
extern const WeaponType& Weapon_C_10_Canister_Rifle_Alexei_Stukov;
extern const WeaponType& Weapon_None;
extern const WeaponType& Weapon_Unknown;
#define WeaponTypeMax 132
extern const WeaponType AllWeaponTypes[132];
namespace DamageTypes { enum Enum { Independent, Explosive, Concussive, Normal, Ignore_Armor, None, Unknown, MAX};}
namespace Races { enum Enum { Zerg = 0, Terran, Protoss, Other, Unused, Select, Random, None, Unknown, MAX };}
namespace UnitCommandTypes { enum Enum { Attack_Move = 0, Attack_Unit, Build, Build_Addon, Train, Morph, Research, Upgrade, Set_Rally_Position, Set_Rally_Unit, Move, Patrol, Hold_Position, Stop, Follow, Gather, Return_Cargo, Repair, Burrow, Unburrow, Cloak, Decloak, Siege, Unsiege, Lift, Land, Load, Unload, Unload_All, Unload_All_Position, Right_Click_Position, Right_Click_Unit, Halt_Construction, Cancel_Construction, Cancel_Addon, Cancel_Train, Cancel_Train_Slot, Cancel_Morph, Cancel_Research, Cancel_Upgrade, Use_Tech, Use_Tech_Position, Use_Tech_Unit, Place_COP, None, Unknown, MAX };}
namespace UnitSizeTypes { enum Enum { Independent = 0, Small, Medium, Large, None, Unknown, MAX };}
}
